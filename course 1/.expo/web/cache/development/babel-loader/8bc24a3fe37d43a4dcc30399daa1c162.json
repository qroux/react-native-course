{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/qr/code/code perso/react-native-course/course 1/src/screens/ColorPickerScreen.js\";\n\nimport React, { useState, useReducer } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport PickerButton from \"../components/PickerButton\";\n\nvar reducer = function reducer(state, action) {\n  switch (action) {\n    case \"INCREASE_RED\":\n      return;\n\n    case \"INCREASE_RED\":\n      return;\n\n    case \"INCREASE_RED\":\n      return;\n\n    case \"INCREASE_RED\":\n      return;\n\n    case \"INCREASE_RED\":\n      return;\n\n    case \"INCREASE_RED\":\n      return;\n\n    default:\n      return;\n  }\n};\n\nvar ColorPickerScreen = function ColorPickerScreen() {\n  var _useReducer = useReducer(reducer, {\n    red: 0,\n    green: 0,\n    blue: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Color Picker\"), React.createElement(PickerButton, {\n    str: \"red\",\n    color: red,\n    setter: setRed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(PickerButton, {\n    str: \"green\",\n    color: green,\n    setter: setGreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(PickerButton, {\n    str: \"blue\",\n    color: blue,\n    setter: setBlue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: style.colorsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [style.square, {\n      backgroundColor: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, red + \", \" + green + \", \" + blue)));\n};\n\nvar style = StyleSheet.create({\n  colorsContainer: {\n    paddingVertical: 30,\n    height: 200,\n    borderColor: \"rgba(212, 212, 212, 0.5)\",\n    borderWidth: 0.7\n  },\n  square: {\n    height: 100,\n    width: 100,\n    marginHorizontal: 10,\n    borderColor: \"rgba(212, 212, 212, 0.5)\",\n    borderWidth: 0.5\n  }\n});\nexport default ColorPickerScreen;","map":{"version":3,"sources":["/home/qr/code/code perso/react-native-course/course 1/src/screens/ColorPickerScreen.js"],"names":["React","useState","useReducer","PickerButton","reducer","state","action","ColorPickerScreen","red","green","blue","dispatch","flex","setRed","setGreen","setBlue","style","colorsContainer","square","backgroundColor","StyleSheet","create","paddingVertical","height","borderColor","borderWidth","width","marginHorizontal"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;;;;;;AASA,OAAOC,YAAP;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAR;AACE,SAAK,cAAL;AACE;;AACF,SAAK,cAAL;AACE;;AACF,SAAK,cAAL;AACE;;AACF,SAAK,cAAL;AACE;;AACF,SAAK,cAAL;AACE;;AACF,SAAK,cAAL;AACE;;AAEF;AACE;AAfJ;AAiBD,CAlBD;;AAoBA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA,oBAKJL,UAAU,CAACE,OAAD,EAAU;AAAEI,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE,CAAjB;AAAoBC,IAAAA,IAAI,EAAE;AAA1B,GAAV,CALN;AAAA;AAAA,MAKvBL,KALuB;AAAA,MAKhBM,QALgB;;AAO9B,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAC,KAAlB;AAAwB,IAAA,KAAK,EAAEJ,GAA/B;AAAoC,IAAA,MAAM,EAAEK,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAC,OAAlB;AAA0B,IAAA,KAAK,EAAEJ,KAAjC;AAAwC,IAAA,MAAM,EAAEK,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAC,MAAlB;AAAyB,IAAA,KAAK,EAAEJ,IAAhC;AAAsC,IAAA,MAAM,EAAEK,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,KAAK,CAACC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLD,KAAK,CAACE,MADD,EAEL;AAAEC,MAAAA,eAAe,WAASX,GAAT,UAAiBC,KAAjB,UAA2BC,IAA3B;AAAjB,KAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUF,GAAV,UAAkBC,KAAlB,UAA4BC,IAA5B,CAPF,CALF,CADF;AAiBD,CAxBD;;AA0BA,IAAMM,KAAK,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC9BJ,EAAAA,eAAe,EAAE;AACfK,IAAAA,eAAe,EAAE,EADF;AAEfC,IAAAA,MAAM,EAAE,GAFO;AAGfC,IAAAA,WAAW,EAAE,0BAHE;AAIfC,IAAAA,WAAW,EAAE;AAJE,GADa;AAO9BP,EAAAA,MAAM,EAAE;AACNK,IAAAA,MAAM,EAAE,GADF;AAENG,IAAAA,KAAK,EAAE,GAFD;AAGNC,IAAAA,gBAAgB,EAAE,EAHZ;AAINH,IAAAA,WAAW,EAAE,0BAJP;AAKNC,IAAAA,WAAW,EAAE;AALP;AAPsB,CAAlB,CAAd;AAgBA,eAAelB,iBAAf","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  FlatList,\n} from \"react-native\";\n\nimport PickerButton from \"../components/PickerButton\";\n\nconst reducer = (state, action) => {\n  switch (action) {\n    case \"INCREASE_RED\":\n      return;\n    case \"INCREASE_RED\":\n      return;\n    case \"INCREASE_RED\":\n      return;\n    case \"INCREASE_RED\":\n      return;\n    case \"INCREASE_RED\":\n      return;\n    case \"INCREASE_RED\":\n      return;\n\n    default:\n      return;\n  }\n};\n\nconst ColorPickerScreen = () => {\n  // const [red, setRed] = useState(0)\n  // const [green, setGreen] = useState(0)\n  // const [blue, setBlue] = useState(0)\n\n  const [state, dispatch] = useReducer(reducer, { red: 0, green: 0, blue: 0 });\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Text>Color Picker</Text>\n      <PickerButton str=\"red\" color={red} setter={setRed} />\n      <PickerButton str=\"green\" color={green} setter={setGreen} />\n      <PickerButton str=\"blue\" color={blue} setter={setBlue} />\n      <View style={style.colorsContainer}>\n        <View\n          style={[\n            style.square,\n            { backgroundColor: `rgb(${red}, ${green}, ${blue})` },\n          ]}\n        ></View>\n        <Text>{`${red}, ${green}, ${blue}`}</Text>\n      </View>\n    </View>\n  );\n};\n\nconst style = StyleSheet.create({\n  colorsContainer: {\n    paddingVertical: 30,\n    height: 200,\n    borderColor: \"rgba(212, 212, 212, 0.5)\",\n    borderWidth: 0.7,\n  },\n  square: {\n    height: 100,\n    width: 100,\n    marginHorizontal: 10,\n    borderColor: \"rgba(212, 212, 212, 0.5)\",\n    borderWidth: 0.5,\n  },\n});\n\nexport default ColorPickerScreen;\n"]},"metadata":{},"sourceType":"module"}