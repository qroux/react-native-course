{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/qroux/code/react-native-course/course 1/src/screens/ColorsScreen.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar ColorsScreen = function ColorsScreen() {\n  var _useState = useState([\"blue\", \"red\"]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \"Colors Screen: \", colors.length), React.createElement(TouchableOpacity, {\n    style: style.button,\n    onPress: function onPress() {\n      return setColors([].concat(_toConsumableArray(colors), [\"rgb(\" + Math.floor(Math.random() * 255) + \", \" + Math.floor(Math.random() * 255) + \", \" + Math.floor(Math.random() * 255) + \")\"]));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, \"Add random color\")), React.createElement(View, {\n    style: style.colorsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    horizontal: true,\n    data: colors,\n    keyExtractor: function keyExtractor(color) {\n      return color;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: [style.square, {\n          backgroundColor: item\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 32\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 88\n        }\n      }, \"A\"));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar style = StyleSheet.create({\n  button: {\n    backgroundColor: '#1e90ff',\n    color: \"white\",\n    padding: 30\n  },\n  colorsContainer: {\n    flex: 1,\n    paddingVertical: 30\n  },\n  square: {\n    height: 50,\n    width: 50,\n    marginHorizontal: 10,\n    borderColor: \"rgba(212, 212, 212, 0.5)\",\n    borderWidth: 0.5\n  }\n});\nexport default ColorsScreen;","map":{"version":3,"sources":["/home/qroux/code/react-native-course/course 1/src/screens/ColorsScreen.js"],"names":["React","useState","ColorsScreen","colors","setColors","length","style","button","Math","floor","random","colorsContainer","color","item","square","backgroundColor","StyleSheet","create","padding","flex","paddingVertical","height","width","marginHorizontal","borderColor","borderWidth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBACKD,QAAQ,CAAC,CAAC,MAAD,EAAS,KAAT,CAAD,CADb;AAAA;AAAA,MAChBE,MADgB;AAAA,MACRC,SADQ;;AAGvB,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsBD,MAAM,CAACE,MAA7B,CADJ,EAEI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEC,KAAK,CAACC,MADjB;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMH,SAAS,8BAAKD,MAAL,aAAoBK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAApB,UAAwDF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAxD,UAA4FF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAA5F,SAAf;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,CAFJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,KAAK,CAACK,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,UAAU,MADd;AAEI,IAAA,IAAI,EAAER,MAFV;AAGI,IAAA,YAAY,EAAE,sBAACS,KAAD;AAAA,aAAWA,KAAX;AAAA,KAHlB;AAII,IAAA,UAAU,EAAE,0BAAc;AAAA,UAAXC,IAAW,QAAXA,IAAW;AACtB,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACP,KAAK,CAACQ,MAAP,EAAe;AAAEC,UAAAA,eAAe,EAAEF;AAAnB,SAAf,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwD,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAxD,CAAP;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CARJ,CADJ;AAqBH,CAxBD;;AA0BA,IAAMP,KAAK,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC5BV,EAAAA,MAAM,EAAE;AACJQ,IAAAA,eAAe,EAAE,SADb;AAEJH,IAAAA,KAAK,EAAE,OAFH;AAGJM,IAAAA,OAAO,EAAE;AAHL,GADoB;AAO5BP,EAAAA,eAAe,EAAE;AACbQ,IAAAA,IAAI,EAAE,CADO;AAEbC,IAAAA,eAAe,EAAE;AAFJ,GAPW;AAW5BN,EAAAA,MAAM,EAAE;AACJO,IAAAA,MAAM,EAAE,EADJ;AAEJC,IAAAA,KAAK,EAAE,EAFH;AAGJC,IAAAA,gBAAgB,EAAE,EAHd;AAIJC,IAAAA,WAAW,EAAE,0BAJT;AAKJC,IAAAA,WAAW,EAAE;AALT;AAXoB,CAAlB,CAAd;AAoBA,eAAevB,YAAf","sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, StyleSheet, TouchableOpacity, FlatList } from 'react-native'\n\n\nconst ColorsScreen = () => {\n    const [colors, setColors] = useState([\"blue\", \"red\"])\n\n    return (\n        <View>\n            <Text>Colors Screen: {colors.length}</Text>\n            <TouchableOpacity\n                style={style.button}\n                onPress={() => setColors([...colors, `rgb(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)})`])}\n            >\n                <Text>Add random color</Text>\n            </TouchableOpacity>\n            <View style={style.colorsContainer}>\n                <FlatList\n                    horizontal\n                    data={colors}\n                    keyExtractor={(color) => color}\n                    renderItem={({ item }) => {\n                        return <View style={[style.square, { backgroundColor: item }]}><Text>A</Text></View>\n                    }}\n                />\n            </View>\n        </View>\n    );\n}\n\nconst style = StyleSheet.create({\n    button: {\n        backgroundColor: '#1e90ff',\n        color: \"white\",\n        padding: 30\n\n    },\n    colorsContainer: {\n        flex: 1,\n        paddingVertical: 30,\n    },\n    square: {\n        height: 50,\n        width: 50,\n        marginHorizontal: 10,\n        borderColor: \"rgba(212, 212, 212, 0.5)\",\n        borderWidth: 0.5\n    }\n})\n\nexport default ColorsScreen;"]},"metadata":{},"sourceType":"module"}