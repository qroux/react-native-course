{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/qr/code/code perso/react-native-course/course 1/src/screens/CounterScreen.js\";\n\nimport React, { useReducer } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        counter: state.counter + 1\n      };\n\n    case \"DECREMENT\":\n      return {\n        counter: state.counter - 1\n      };\n\n    default:\n      break;\n  }\n};\n\nvar CounterScreen = function CounterScreen() {\n  var _useReducer = useReducer(reducer, {\n    counter: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Counter Screen\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Counter: \", counter), React.createElement(TouchableOpacity, {\n    style: style.button,\n    onPress: function onPress() {\n      setCounter(counter + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: style.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Increase\")), React.createElement(TouchableOpacity, {\n    style: style.button,\n    onPress: function onPress() {\n      setCounter(counter - 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: style.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Decrease\")));\n};\n\nvar style = StyleSheet.create({\n  button: {\n    backgroundColor: \"#1e90ff\",\n    color: \"white\",\n    marginVertical: 10,\n    height: 70,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  text: {\n    color: \"white\",\n    textTransform: \"uppercase\"\n  }\n});\nexport default CounterScreen;","map":{"version":3,"sources":["/home/qr/code/code perso/react-native-course/course 1/src/screens/CounterScreen.js"],"names":["React","useReducer","reducer","state","action","type","counter","CounterScreen","dispatch","style","button","setCounter","text","StyleSheet","create","backgroundColor","color","marginVertical","height","justifyContent","alignItems","textTransform"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AAAEC,QAAAA,OAAO,EAAEH,KAAK,CAACG,OAAN,GAAgB;AAA3B,OAAP;;AACF,SAAK,WAAL;AACE,aAAO;AAAEA,QAAAA,OAAO,EAAEH,KAAK,CAACG,OAAN,GAAgB;AAA3B,OAAP;;AAEF;AACE;AAPJ;AASD,CAVD;;AAYA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,oBACAN,UAAU,CAACC,OAAD,EAAU;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAV,CADV;AAAA;AAAA,MACnBH,KADmB;AAAA,MACZK,QADY;;AAG1B,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBF,OAAhB,CAFF,EAGE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEG,KAAK,CAACC,MADf;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbC,MAAAA,UAAU,CAACL,OAAO,GAAG,CAAX,CAAV;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,KAAK,CAACG,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,CAHF,EAWE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEH,KAAK,CAACC,MADf;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbC,MAAAA,UAAU,CAACL,OAAO,GAAG,CAAX,CAAV;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,KAAK,CAACG,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,CAXF,CADF;AAsBD,CAzBD;;AA2BA,IAAMH,KAAK,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC9BJ,EAAAA,MAAM,EAAE;AACNK,IAAAA,eAAe,EAAE,SADX;AAENC,IAAAA,KAAK,EAAE,OAFD;AAGNC,IAAAA,cAAc,EAAE,EAHV;AAINC,IAAAA,MAAM,EAAE,EAJF;AAKNC,IAAAA,cAAc,EAAE,QALV;AAMNC,IAAAA,UAAU,EAAE;AANN,GADsB;AAS9BR,EAAAA,IAAI,EAAE;AACJI,IAAAA,KAAK,EAAE,OADH;AAEJK,IAAAA,aAAa,EAAE;AAFX;AATwB,CAAlB,CAAd;AAeA,eAAed,aAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return { counter: state.counter + 1 };\n    case \"DECREMENT\":\n      return { counter: state.counter - 1 };\n\n    default:\n      break;\n  }\n};\n\nconst CounterScreen = () => {\n  const [state, dispatch] = useReducer(reducer, { counter: 0 });\n\n  return (\n    <View>\n      <Text>Counter Screen</Text>\n      <Text>Counter: {counter}</Text>\n      <TouchableOpacity\n        style={style.button}\n        onPress={() => {\n          setCounter(counter + 1);\n        }}\n      >\n        <Text style={style.text}>Increase</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={style.button}\n        onPress={() => {\n          setCounter(counter - 1);\n        }}\n      >\n        <Text style={style.text}>Decrease</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst style = StyleSheet.create({\n  button: {\n    backgroundColor: \"#1e90ff\",\n    color: \"white\",\n    marginVertical: 10,\n    height: 70,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  text: {\n    color: \"white\",\n    textTransform: \"uppercase\",\n  },\n});\n\nexport default CounterScreen;\n"]},"metadata":{},"sourceType":"module"}