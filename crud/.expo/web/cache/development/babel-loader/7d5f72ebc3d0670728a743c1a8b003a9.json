{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport createDataContext from \"./createDataContext\";\nimport faker from \"faker\";\n\nvar blogReducer = function blogReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_BLOGPOST\":\n      return [].concat(_toConsumableArray(state), [{\n        id: Math.floor(Math.random() * 99999).toString(),\n        title: action.payload.title,\n        content: action.payload.content\n      }]);\n\n    case \"EDIT_BLOGPOST\":\n      var _action$payload = action.payload,\n          id = _action$payload.id,\n          title = _action$payload.title,\n          content = _action$payload.content;\n      return _toConsumableArray(state).map(function (post) {\n        if (post.id === id) {\n          return action.payload;\n        } else {\n          return post;\n        }\n      });\n\n    case \"DELETE_BLOGPOST\":\n      return _toConsumableArray(state).filter(function (post) {\n        return post.id !== action.payload;\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar addBlogPost = function addBlogPost(dispatch) {\n  return function (title, content) {\n    dispatch({\n      type: \"ADD_BLOGPOST\",\n      payload: {\n        title: title,\n        content: content\n      }\n    });\n  };\n};\n\nvar editBlogPost = function editBlogPost(dispatch) {\n  return function (title, content, id) {\n    dispatch({\n      type: \"EDIT_BLOGPOST\",\n      payload: {\n        id: id,\n        title: title,\n        content: content\n      }\n    });\n  };\n};\n\nvar deleteBlogPost = function deleteBlogPost(dispatch) {\n  return function (id) {\n    dispatch({\n      type: \"DELETE_BLOGPOST\",\n      payload: id\n    });\n  };\n};\n\nvar _createDataContext = createDataContext(blogReducer, {\n  addBlogPost: addBlogPost,\n  deleteBlogPost: deleteBlogPost,\n  editBlogPost: editBlogPost\n}, [{\n  id: \"1684845\",\n  title: \"test post\",\n  content: \"lorem ofzejpojnefposehfh\"\n}]),\n    Context = _createDataContext.Context,\n    Provider = _createDataContext.Provider;\n\nexport { Context, Provider };","map":{"version":3,"sources":["/home/qroux/code/react-native-course/crud/src/context/BlogContext.js"],"names":["createDataContext","faker","blogReducer","state","action","type","id","Math","floor","random","toString","title","payload","content","map","post","filter","addBlogPost","dispatch","editBlogPost","deleteBlogPost","Context","Provider"],"mappings":";AAAA,OAAOA,iBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,0CACKF,KADL,IAEE;AACEG,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,EAAkCC,QAAlC,EADN;AAEEC,QAAAA,KAAK,EAAEP,MAAM,CAACQ,OAAP,CAAeD,KAFxB;AAGEE,QAAAA,OAAO,EAAET,MAAM,CAACQ,OAAP,CAAeC;AAH1B,OAFF;;AAQF,SAAK,eAAL;AAAA,4BACiCT,MAAM,CAACQ,OADxC;AAAA,UACUN,EADV,mBACUA,EADV;AAAA,UACcK,KADd,mBACcA,KADd;AAAA,UACqBE,OADrB,mBACqBA,OADrB;AAEE,aAAO,mBAAIV,KAAJ,EAAWW,GAAX,CAAe,UAACC,IAAD,EAAU;AAC9B,YAAIA,IAAI,CAACT,EAAL,KAAYA,EAAhB,EAAoB;AAClB,iBAAOF,MAAM,CAACQ,OAAd;AACD,SAFD,MAEO;AACL,iBAAOG,IAAP;AACD;AACF,OANM,CAAP;;AAOF,SAAK,iBAAL;AACE,aAAO,mBAAIZ,KAAJ,EAAWa,MAAX,CAAkB,UAACD,IAAD;AAAA,eAAUA,IAAI,CAACT,EAAL,KAAYF,MAAM,CAACQ,OAA7B;AAAA,OAAlB,CAAP;;AACF;AACE,aAAOT,KAAP;AAtBJ;AAwBD,CAzBD;;AA2BA,IAAMc,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AAChC,SAAO,UAACP,KAAD,EAAQE,OAAR,EAAoB;AACzBK,IAAAA,QAAQ,CAAC;AAAEb,MAAAA,IAAI,EAAE,cAAR;AAAwBO,MAAAA,OAAO,EAAE;AAAED,QAAAA,KAAK,EAALA,KAAF;AAASE,QAAAA,OAAO,EAAPA;AAAT;AAAjC,KAAD,CAAR;AACD,GAFD;AAGD,CAJD;;AAMA,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACD,QAAD,EAAc;AACjC,SAAO,UAACP,KAAD,EAAQE,OAAR,EAAiBP,EAAjB,EAAwB;AAC7BY,IAAAA,QAAQ,CAAC;AAAEb,MAAAA,IAAI,EAAE,eAAR;AAAyBO,MAAAA,OAAO,EAAE;AAAEN,QAAAA,EAAE,EAAFA,EAAF;AAAMK,QAAAA,KAAK,EAALA,KAAN;AAAaE,QAAAA,OAAO,EAAPA;AAAb;AAAlC,KAAD,CAAR;AACD,GAFD;AAGD,CAJD;;AAMA,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAACF,QAAD,EAAc;AACnC,SAAO,UAACZ,EAAD,EAAQ;AACbY,IAAAA,QAAQ,CAAC;AAAEb,MAAAA,IAAI,EAAE,iBAAR;AAA2BO,MAAAA,OAAO,EAAEN;AAApC,KAAD,CAAR;AACD,GAFD;AAGD,CAJD;;yBAMqCN,iBAAiB,CACpDE,WADoD,EAEpD;AAAEe,EAAAA,WAAW,EAAXA,WAAF;AAAeG,EAAAA,cAAc,EAAdA,cAAf;AAA+BD,EAAAA,YAAY,EAAZA;AAA/B,CAFoD,EAGpD,CAAC;AAAEb,EAAAA,EAAE,EAAE,SAAN;AAAiBK,EAAAA,KAAK,EAAE,WAAxB;AAAqCE,EAAAA,OAAO,EAAE;AAA9C,CAAD,CAHoD,C;IAAvCQ,O,sBAAAA,O;IAASC,Q,sBAAAA,Q","sourcesContent":["import createDataContext from \"./createDataContext\";\nimport faker from \"faker\";\n\nconst blogReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_BLOGPOST\":\n      return [\n        ...state,\n        {\n          id: Math.floor(Math.random() * 99999).toString(),\n          title: action.payload.title,\n          content: action.payload.content,\n        },\n      ];\n    case \"EDIT_BLOGPOST\":\n      const { id, title, content } = action.payload;\n      return [...state].map((post) => {\n        if (post.id === id) {\n          return action.payload;\n        } else {\n          return post;\n        }\n      });\n    case \"DELETE_BLOGPOST\":\n      return [...state].filter((post) => post.id !== action.payload);\n    default:\n      return state;\n  }\n};\n\nconst addBlogPost = (dispatch) => {\n  return (title, content) => {\n    dispatch({ type: \"ADD_BLOGPOST\", payload: { title, content } });\n  };\n};\n\nconst editBlogPost = (dispatch) => {\n  return (title, content, id) => {\n    dispatch({ type: \"EDIT_BLOGPOST\", payload: { id, title, content } });\n  };\n};\n\nconst deleteBlogPost = (dispatch) => {\n  return (id) => {\n    dispatch({ type: \"DELETE_BLOGPOST\", payload: id });\n  };\n};\n\nexport const { Context, Provider } = createDataContext(\n  blogReducer,\n  { addBlogPost, deleteBlogPost, editBlogPost },\n  [{ id: \"1684845\", title: \"test post\", content: \"lorem ofzejpojnefposehfh\" }]\n);\n"]},"metadata":{},"sourceType":"module"}